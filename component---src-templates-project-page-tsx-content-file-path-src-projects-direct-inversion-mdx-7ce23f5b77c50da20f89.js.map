{"version":3,"file":"component---src-templates-project-page-tsx-content-file-path-src-projects-direct-inversion-mdx-7ce23f5b77c50da20f89.js","mappings":";0LAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,OAAQ,SACRC,EAAG,IACHC,GAAI,OACHC,EAAAA,EAAAA,KAAsBT,EAAMU,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBV,EAAYG,GAAI,KAAM,iBAAkB,KAAMO,EAAAA,cAAoB,MAAO,CAC5IC,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAEbJ,EAAAA,cAAoB,MAAO,CAC5BK,IAAK,yCACLC,IAAK,WACLC,MAAO,cACPN,MAAO,CACLO,MAAO,YAEN,KAAMR,EAAAA,cAAoB,MAAO,CACpCC,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAEbJ,EAAAA,cAAoBV,EAAYI,EAAG,KAAMM,EAAAA,cAAoBV,EAAYK,OAAQ,KAAMK,EAAAA,cAAoBV,EAAYM,EAAG,CAC3Ha,KAAM,oCACL,qBAAsB,KAAMT,EAAAA,cAAoBV,EAAYG,GAAI,KAAM,YAAa,KAAMO,EAAAA,cAAoBV,EAAYI,EAAG,KAAM,45BAA65BM,EAAAA,cAAoBV,EAAYO,GAAI,KAAM,oBAAqB,4dACnmC,CAKA,MAJA,SAAoBR,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOqB,QAASC,GAAapB,OAAOC,OAAO,CAAC,GAAGM,EAAAA,EAAAA,KAAsBT,EAAMU,YAC3E,OAAOY,EAAYX,EAAAA,cAAoBW,EAAWtB,EAAOW,EAAAA,cAAoBZ,EAAmBC,IAAUD,EAAkBC,EAC9H,mDC7BA,MAAMuB,EAAa,CACjBC,KAAIA,EAAAA,MAEN,SAASC,EAAaC,GACpB,IAAI,KAACC,EAAI,SAAEC,GAAYF,EAIvB,OAAOf,EAAAA,cAAoBkB,EAAAA,EAAY,KAAMlB,EAAAA,cAAoBmB,EAAAA,EAAW,CAC1EC,GAAI,KACHpB,EAAAA,cAAoBqB,EAAAA,EAAQ,CAC7BC,YAAatB,EAAAA,cAAoBuB,EAAAA,EAAe,CAC9CC,KAAM,KAERC,QATsBC,MACtBC,EAAAA,EAAAA,UAAS,IAAI,GASZ,oBAAqB3B,EAAAA,cAAoB,KAAM,KAAMgB,EAAKY,IAAIC,YAAYtB,OAAQP,EAAAA,cAAoB,IAAK,KAAMgB,EAAKY,IAAIC,YAAYC,aAAc9B,EAAAA,cAAoB+B,EAAAA,EAAa,CACtLhC,WAAYa,GACXK,IACL,CACe,SAASe,EAAiB3C,GACvC,OAAOW,EAAAA,cAAoBc,EAAczB,EAAOW,EAAAA,cAAoBiC,EAAqB5C,GAC3F,6FCFA,MAAM6C,EAAkB,CAAC,EAEnBC,EAAa,gBAAoBD,GAUhC,SAASE,EAAiBrC,GAC/B,MAAMsC,EAAoB,aAAiBF,GAG3C,OAAO,WACL,WAEE,MAA0B,mBAAfpC,EACFA,EAAWsC,GAGb,IAAIA,KAAsBtC,EACnC,GACA,CAACsC,EAAmBtC,GAExB,CAWO,SAASgC,EAAYO,GAE1B,IAAIC,EAWJ,OAREA,EADED,EAAWE,qBAEsB,mBAA1BF,EAAWvC,WACduC,EAAWvC,WAAWmC,GACtBI,EAAWvC,YAAcmC,EAEfE,EAAiBE,EAAWvC,YAGvC,gBACLoC,EAAWM,SACX,CAACC,MAAOH,GACRD,EAAWrB,SAEf,2DC1EIM,GAAgB,aAAqB,UAAW,aAAc,gBAAiB,CAAC,CAAC,OAAQ,CAAE,EAAK,aAAc,IAAO,UAAY,CAAC,OAAQ,CAAE,EAAK,YAAa,IAAO,UAAY,CAAC,OAAQ,CAAE,EAAK,aAAc,IAAO","sources":["webpack://my-gatsby-site/./src/projects/direct_inversion.mdx","webpack://my-gatsby-site/./src/templates/ProjectPage.tsx","webpack://my-gatsby-site/./node_modules/@mdx-js/react/lib/index.js","webpack://my-gatsby-site/./node_modules/@tabler/icons-react/dist/esm/icons/IconArrowLeft.mjs"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h4: \"h4\",\n    p: \"p\",\n    strong: \"strong\",\n    a: \"a\",\n    em: \"em\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h4, null, \"Paper Preview\"), \"\\n\", React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    }\n  }, React.createElement(\"img\", {\n    src: \"/images/direct_inversion_thumbnail.png\",\n    alt: \"Alt text\",\n    title: \"Image Title\",\n    style: {\n      width: \"500px\"\n    }\n  })), \"\\n\", React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    }\n  }, React.createElement(_components.p, null, React.createElement(_components.strong, null, React.createElement(_components.a, {\n    href: \"https://arxiv.org/abs/2211.07825\"\n  }, \"Arxiv Preprint\")))), \"\\n\", React.createElement(_components.h4, null, \"Abstract\"), \"\\n\", React.createElement(_components.p, null, \"With the rise of large, publicly-available text-to-image diffusion models, text-guided real image editing has garnered much research attention recently. Existing methods tend to either rely on some form of per-instance or per-task fine-tuning and optimization, require multiple novel views, or they inherently entangle preservation of real image identity, semantic coherence, and faithfulness to text guidance. In this paper, we propose an optimization-free and zero fine-tuning framework that applies complex and non-rigid edits to a single real image via a text prompt, avoiding all the pitfalls described above. Using widely-available generic pre-trained text-to-image diffusion models, we demonstrate the ability to modulate pose, scene, background, style, color, and even racial identity in an extremely flexible manner through a single target text detailing the desired edit. Furthermore, our method, which we name \", React.createElement(_components.em, null, \"Direct Inversion\"), \", proposes multiple intuitively configurable hyperparameters to allow for a wide range of types and extents of real image edits. We prove our method's efficacy in producing high-quality, diverse, semantically coherent, and faithful real image edits through applying it on a variety of inputs for a multitude of tasks. We also formalize our method in well-established theory, detail future experiments for further improvement, and compare against state-of-the-art attempts.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/adham/code/adham-elarabawy.github.io/src/projects/direct_inversion.mdx\";\nimport React from \"react\";\nimport {navigate} from \"gatsby\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {Link} from \"gatsby\";\nimport {PageLayout} from \"../components/PageLayout\";\nimport {Button, Container} from \"@mantine/core\";\nimport {IconArrowLeft} from \"@tabler/icons-react\";\nconst shortcodes = {\n  Link\n};\nfunction PageTemplate(_ref) {\n  let {data, children} = _ref;\n  const handleBackClick = () => {\n    navigate(\"/\");\n  };\n  return React.createElement(PageLayout, null, React.createElement(Container, {\n    pt: 100\n  }, React.createElement(Button, {\n    leftSection: React.createElement(IconArrowLeft, {\n      size: 14\n    }),\n    onClick: handleBackClick\n  }, \"Back to Projects\"), React.createElement(\"h1\", null, data.mdx.frontmatter.title), React.createElement(\"p\", null, data.mdx.frontmatter.description), React.createElement(MDXProvider, {\n    components: shortcodes\n  }, children)));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PageTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nconst query = \"4269097499\";\n","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n","/**\n * @license @tabler/icons-react v3.1.0 - MIT\n *\n * This source code is licensed under the MIT license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createReactComponent from '../createReactComponent.mjs';\n\nvar IconArrowLeft = createReactComponent(\"outline\", \"arrow-left\", \"IconArrowLeft\", [[\"path\", { \"d\": \"M5 12l14 0\", \"key\": \"svg-0\" }], [\"path\", { \"d\": \"M5 12l6 6\", \"key\": \"svg-1\" }], [\"path\", { \"d\": \"M5 12l6 -6\", \"key\": \"svg-2\" }]]);\n\nexport { IconArrowLeft as default };\n//# sourceMappingURL=IconArrowLeft.mjs.map\n"],"names":["_createMdxContent","props","_components","Object","assign","h4","p","strong","a","em","_provideComponents","components","React","style","display","justifyContent","alignItems","src","alt","title","width","href","wrapper","MDXLayout","shortcodes","Link","PageTemplate","_ref","data","children","PageLayout","Container","pt","Button","leftSection","IconArrowLeft","size","onClick","handleBackClick","navigate","mdx","frontmatter","description","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","emptyComponents","MDXContext","useMDXComponents","contextComponents","properties","allComponents","disableParentContext","Provider","value"],"sourceRoot":""}