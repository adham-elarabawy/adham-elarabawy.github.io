"use strict";(self.webpackChunkmy_gatsby_site=self.webpackChunkmy_gatsby_site||[]).push([[552],{3266:function(e,t,a){a.r(t),a.d(t,{default:function(){return g}});var n=a(2757),r=a(5637);function o(e){const t=Object.assign({h4:"h4",p:"p",a:"a"},(0,n.RP)(),e.components);return r.createElement(r.Fragment,null,r.createElement("div",{style:{display:"flex",justifyContent:"center",alignItems:"center"}},r.createElement("img",{src:"/images/open_startracker_demo.gif",alt:"Alt text",title:"Image Title",style:{width:"300px"}})),"\n",r.createElement(t.h4,null,"What is this?"),"\n",r.createElement(t.p,null,"I created OpenStartracker in an effort to provide a lower-cost, open-source, machine-learning compatible solution to long-exposure astrophotography. It supports full automatic latitude calibration, polaris alignment, & object tracking via onboard computer vision."),"\n",r.createElement(t.h4,null,"How does it work?"),"\n",r.createElement(t.p,null,"Typically, long-exposure astrophotography solutions for DSLR camera (sold for >$300) work by rotating at exactly the speed of the earth's rotation about the polar axis. ",r.createElement(t.a,{href:"https://www.youtube.com/watch?v=WpmGi8DHu4c"},"This video")," explains the math behind this rotation very intuitively. However, in order for this rotation to properly compensate for earth's rotation, it has to first be aligned with the polar axis (about polaris), which is based on your latitude."),"\n",r.createElement(t.p,null,"This latitude alignment is usually manually done via an equatorial mount, which just points the rotating base up at the north star. Given that latitude can be easily derived from gps location, I wanted to motorize + automate this latitude alignment as well using an iOS application + IMU sensor embedded in the design."),"\n",r.createElement(t.h4,null,"Mechanical Design"),"\n",r.createElement(t.p,null,"You can get access to the open-source mechanical design ",r.createElement(t.a,{href:"https://cad.onshape.com/documents/eb5985eb85492b87b2d7116d/w/8a4f6561f5f12bc6eb17cdf7/e/3c6ea5c35ddcd26be48681a4"},"via OnShape"),", which I designed this project on."))}var i=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,n.RP)(),e.components);return t?r.createElement(t,e,r.createElement(o,e)):o(e)},l=a(2139),c=a(8166),s=a(6721),p=a(2191),d=a(4359),u=a(4147);const m={Link:l.Link};function h(e){let{data:t,children:a}=e;const o=(0,u.xd)(),i="dark"===o.colorScheme?"rgba(255, 255, 255, 0.05)":"rgba(0, 0, 0, 0.05)",h="dark"===o.colorScheme?o.colors.dark[7]:o.colors.gray[0];return r.createElement(c.M,null,r.createElement("div",{style:{minHeight:"100vh",backgroundImage:`\n          linear-gradient(${i} 0.5px, transparent 0.5px),\n          linear-gradient(90deg, ${i} 0.5px, transparent 0.5px)\n        `,backgroundSize:"20px 20px",backgroundPosition:"10px 10px",padding:"20px"}},r.createElement(s.m,null,r.createElement(p.$,{leftSection:r.createElement(d.A,{size:16}),onClick:()=>{(0,l.navigate)("/")},variant:"subtle",color:"dark"===o.colorScheme?"gray.4":"dark",styles:e=>({root:{padding:"8px 16px",transition:"all 0.2s ease","&:hover":{transform:"translateX(-4px)",backgroundColor:"transparent"}}})},"Back to Projects"),r.createElement("div",{style:{backgroundColor:`${h}ee`,padding:"30px",borderRadius:o.radius.md,marginTop:"20px",backdropFilter:"blur(5px)"}},r.createElement("h1",null,t.mdx.frontmatter.title),r.createElement("p",null,t.mdx.frontmatter.description),r.createElement(n.xA,{components:m},a)))))}function g(e){return r.createElement(h,e,r.createElement(i,e))}}}]);
//# sourceMappingURL=component---src-templates-project-page-tsx-content-file-path-src-projects-open-startracker-mdx-d29d4c54189aa2faf4fc.js.map