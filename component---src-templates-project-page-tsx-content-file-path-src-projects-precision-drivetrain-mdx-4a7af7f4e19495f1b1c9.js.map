{"version":3,"file":"component---src-templates-project-page-tsx-content-file-path-src-projects-precision-drivetrain-mdx-4a7af7f4e19495f1b1c9.js","mappings":"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","sources":["webpack://my-gatsby-site/./src/projects/precision_drivetrain.mdx","webpack://my-gatsby-site/./src/templates/ProjectPage.tsx","webpack://my-gatsby-site/./node_modules/@mdx-js/react/lib/index.js","webpack://my-gatsby-site/./node_modules/@tabler/icons-react/dist/esm/icons/IconArrowLeft.mjs"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h4: \"h4\",\n    p: \"p\",\n    a: \"a\",\n    em: \"em\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    }\n  }, React.createElement(\"img\", {\n    src: \"/images/drivetrain-demo.gif\",\n    alt: \"Alt text\",\n    title: \"Image Title\",\n    style: {\n      width: \"350px\"\n    }\n  })), \"\\n\", React.createElement(_components.h4, null, \"Introduction\"), \"\\n\", React.createElement(_components.p, null, \"After 3 years of high school robotics, working primarily on differential drives, I was slightly frustrated by the inaccuracies stemming primarily from elementary mechanical tolerances. Considering that I was about to graduate from this level of high school robotics into my undergraduate studies at Berkeley, I decided to undertake this project to formalize all that I learned into a 'from-scratch', 'start-to-finish' differential drive system where I had control over every single step along the design process.\"), \"\\n\", React.createElement(_components.h4, null, \"Design Process\"), \"\\n\", React.createElement(_components.p, null, \"My first step was to decide on the motors I wanted to use. I had it narrowed down to two options. Firstly, I could go the brushed motor route (very similar to what I had done previously in FRC), characterize the motors and determine a voltage-velocity equation and solve for the arbitrary constants, then design and tune a velocity PID controller. Although familiar, I really wanted to take my precision and accuracy up a notch, so I decided to go the second route. The second option (that I picked) was to use stepper motors, which are inherently accurate and precise (assuming the load isn't too large), since I would just be able to tell the motors to go to a velocity and assume they reached it semi-instantaneously. An added benefit was not having to worry about encoders.\"), \"\\n\", React.createElement(_components.p, null, \"This design choice came in the form of NEMA-17 motors and DRV-8825 stepper drivers. Electronics-wise, I decided on using an arduino nano for interfacing with the stepper drivers, and a raspberry pi for all the higher-level control and controller interface.\"), \"\\n\", React.createElement(_components.p, null, \"I then designed and 3D-printed the precision platform, seen here:\"), \"\\n\", React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    }\n  }, React.createElement(\"img\", {\n    src: \"/images/drivetrain_model.png\",\n    alt: \"Alt text\",\n    title: \"Image Title\",\n    style: {\n      width: \"350px\"\n    }\n  })), \"\\n\", React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    }\n  }, React.createElement(\"img\", {\n    src: \"/images/final_drivetrain.JPG\",\n    alt: \"Alt text\",\n    title: \"Image Title\",\n    style: {\n      width: \"350px\",\n      \"-webkit-transform\": \"scaleX(-1)\",\n      \"transform\": \"scaleX(-1)\"\n    }\n  })), \"\\n\", React.createElement(_components.p, null, \"You can find the source code for base control (for both the arduino & RPi) \", React.createElement(_components.a, {\n    href: \"https://github.com/adham-elarabawy/Precision-Drivetrain-Platform\"\n  }, \"on my github.\")), \"\\n\", React.createElement(_components.p, null, \"I also created a custom drive controller board that handled the interface between the arduino nano and the DRV stepper drivers:\"), \"\\n\", React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    }\n  }, React.createElement(\"img\", {\n    src: \"/images/drivetrain_top_board.jpg\",\n    alt: \"Alt text\",\n    title: \"Image Title\",\n    style: {\n      width: \"200px\"\n    }\n  })), \"\\n\", React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    }\n  }, React.createElement(\"img\", {\n    src: \"/images/drivetrain_bottom_board.jpg\",\n    alt: \"Alt text\",\n    title: \"Image Title\",\n    style: {\n      width: \"200px\"\n    }\n  })), \"\\n\", React.createElement(_components.p, null, \"By this point, I could drive the robot with an xbox controller by using some simple differential drive logic to map the joystick values to velocities for the left & right sides of the drivetrain.\"), \"\\n\", React.createElement(_components.h4, null, \"Path Generation & Pursuit\"), \"\\n\", React.createElement(_components.p, null, \"Now that I had a working drivetrain that I could precisely control, I decided to implement a path generation and pursuit suite. The basic premise is as follows: I wanted to be able to select waypoints with a specified heading (global yaw), and the suite should find a continuous path of continuous curvature (since this is a differential drive after all) constrained by the selected waypoints. Then, I wanted the suite to create a time-parametrized trajectory from the aforementioned path using the velocity and acceleration constraints of the platform.\"), \"\\n\", React.createElement(_components.p, null, \"This didn't turn out to be trivial. After doing some research, I decided that I wanted to use Quintic Hermite Spline interpolation to determine the path, since it is the only option that I could find that had C2 continuity (curvature continuity) & properly constrained the output path to the given waypoints and their specified tangents. The more popular options (i.e. Bezier Curves & Cubic Hermite Splines) either only had C1 continuity (which would result in jerky turning) or didn't actually \", React.createElement(_components.em, null, \"constrain\"), \" the path to the points, rather merely getting the path somewhat close to the points. The below chart summarizes the clear disadvantage of cubic splines quite well, and \", React.createElement(_components.a, {\n    href: \"http://www2.informatik.uni-freiburg.de/~lau/students/Sprunk2008.pdf\"\n  }, \"this paper\"), \" outlined the choice for quintic hermite splines clearly.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"Note: If there is only one polynomial segment, the spline is often called a Bézier curve. If each segment is described by its ending positions and derivatives, it is said to be in \\\"Hermite\\\" form.\")), \"\\n\", React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    }\n  }, React.createElement(\"img\", {\n    src: \"/images/drivetrain_chart.png\",\n    alt: \"Alt text\",\n    title: \"Image Title\",\n    style: {\n      width: \"300px\"\n    }\n  })), \"\\n\", React.createElement(_components.p, null, \"Then, it was just a matter of using a trapezoidal motion profile to find the corresponding velocity and acceleration for evenly spaced points to create a trajectory. But wait! Evenly spaced points? Well, it's quite hard to derive a fully continuous trajectory function, so what I did was determine the acceleration and velocity for a whole bunch of evenly spaced points on the path, then during runtime, I sample this model of the trajectory by passing in the elapsed time since the trajectory started, and I have a sample method that returns the estimated desired velocity by using simple linear interpolation. Since I have an excess of ~1000 control points on average, this is definitely more than accurate enough and it keeps this entire process fast enough to be sampled runtime.\"), \"\\n\", React.createElement(_components.p, null, \"Just because I like matplotlib (who doesn't?), I decided to make a simple visualization tool so that one can preview the path & trajectory before actually deploying to the robot. \", React.createElement(_components.em, null, \"Note: Keep in mind that the trajectory animation isn't 100% accurate, since matplotlib sometimes takes more time to plot the animation than the desired timestep.\")), \"\\n\", React.createElement(_components.p, null, \"You can find the source code for the visualization tool \", React.createElement(_components.a, {\n    href: \"https://github.com/adham-elarabawy/PyDataAnalysis/tree/master/src/common/interpolation\"\n  }, \"on my github.\"), \"\\n\", React.createElement(_components.em, null, \"The file to run is \", React.createElement(_components.code, null, \"test_interface.py\"))), \"\\n\", React.createElement(_components.p, null, \"Here's a little demo:\"), \"\\n\", React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    }\n  }, React.createElement(\"iframe\", {\n    width: \"560\",\n    height: \"315\",\n    class: \"centered\",\n    src: \"https://www.youtube.com/embed/E_C7dhMRbvQ\",\n    frameborder: \"0\",\n    allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n    allowfullscreen: true\n  })), \"\\n\", React.createElement(_components.h4, null, \"Some fun!\"), \"\\n\", React.createElement(_components.p, null, \"I wanted to make a visualization tool for deriving quintic hermite splines, so while messing around with desmos, I decided to show all the control points, hermite basis functions, xy position/derivative/second derivative functions on the same plot. I found this to be quite aesthetically pleasing.\"), \"\\n\", React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    }\n  }, React.createElement(\"img\", {\n    src: \"/images/drivetrain_plot.png\",\n    alt: \"Alt text\",\n    title: \"Image Title\",\n    style: {\n      width: \"300px\"\n    }\n  })));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/adham/code/adham-elarabawy.github.io/src/projects/precision_drivetrain.mdx\";\nimport React from \"react\";\nimport {navigate} from \"gatsby\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {Link} from \"gatsby\";\nimport {PageLayout} from \"../components/PageLayout\";\nimport {Button, Container} from \"@mantine/core\";\nimport {IconArrowLeft} from \"@tabler/icons-react\";\nconst shortcodes = {\n  Link\n};\nfunction PageTemplate(_ref) {\n  let {data, children} = _ref;\n  const handleBackClick = () => {\n    navigate(\"/\");\n  };\n  return React.createElement(PageLayout, null, React.createElement(Container, {\n    pt: 100\n  }, React.createElement(Button, {\n    leftSection: React.createElement(IconArrowLeft, {\n      size: 14\n    }),\n    onClick: handleBackClick\n  }, \"Back to Projects\"), React.createElement(\"h1\", null, data.mdx.frontmatter.title), React.createElement(\"p\", null, data.mdx.frontmatter.description), React.createElement(MDXProvider, {\n    components: shortcodes\n  }, children)));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PageTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nconst query = \"4269097499\";\n","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n","/**\n * @license @tabler/icons-react v3.1.0 - MIT\n *\n * This source code is licensed under the MIT license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createReactComponent from '../createReactComponent.mjs';\n\nvar IconArrowLeft = createReactComponent(\"outline\", \"arrow-left\", \"IconArrowLeft\", [[\"path\", { \"d\": \"M5 12l14 0\", \"key\": \"svg-0\" }], [\"path\", { \"d\": \"M5 12l6 6\", \"key\": \"svg-1\" }], [\"path\", { \"d\": \"M5 12l6 -6\", \"key\": \"svg-2\" }]]);\n\nexport { IconArrowLeft as default };\n//# sourceMappingURL=IconArrowLeft.mjs.map\n"],"names":["_createMdxContent","props","_components","Object","assign","h4","p","a","em","code","_provideComponents","components","React","style","display","justifyContent","alignItems","src","alt","title","width","href","height","class","frameborder","allow","allowfullscreen","wrapper","MDXLayout","shortcodes","Link","PageTemplate","_ref","data","children","PageLayout","Container","pt","Button","leftSection","IconArrowLeft","size","onClick","handleBackClick","navigate","mdx","frontmatter","description","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","emptyComponents","MDXContext","useMDXComponents","contextComponents","properties","allComponents","disableParentContext","Provider","value"],"sourceRoot":""}